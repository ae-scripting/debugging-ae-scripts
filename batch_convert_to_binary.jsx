//~ batch export to bytesmain();function main(){    var allImages = loadFiles("*.png"); // opens a prompt and lets the user choose a folder        if(allImages == null) return; // if that what the function returns null is - cancel    var folder = allImages[0].parent;    //~ alert(allImages);    var imgstrings = [];    for(var i = 0; i < allImages.length;i++){            var curfile = File (allImages[i]);                        curfile.open ('r');            curfile.encoding = 'BINARY';            var str = curfile.read();            curfile.close();            var newfile = new File (folder.fsName + '/' + curfile.name + '.txt');            newfile.open('w');            newfile.encoding = 'UTF-8';            newfile.write(str);            newfile.close();                } // end loop i    //~     for(var j = 0; j < imgstrings.length;j++){//~         var newfile = new File (folder.fsName + '/' + allImages[j].name + '.txt');//~         newfile.open('w');//~         newfile.encoding = 'UTF-8';//~         newfile.write(imgstrings[j]);//~         newfile.close();//~         //~         }return 0;    } // end mainfunction loadFiles(type){ // the function that loads the filesvar theFolder = Folder.selectDialog ("Choose the Folder");// user select a folderif(!theFolder){ // if the folder is not a folder cancel the script    return; // this cancels the whole function image_loadFiles        }; // end folder checkvar allImages = theFolder.getFiles(type);// get the files by typeif((allImages.length < 1)||(allImages == null) ){// again if check if there are images    alert("There are no images of the type: " + type);// hm something went wrong? User error    return null; // so we cancel the function       }else{    return allImages; // give back the images. Success!        };// end all images check    };// end function loadFiles